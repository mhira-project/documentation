"use strict";(self.webpackChunkmhira_docs=self.webpackChunkmhira_docs||[]).push([[186],{3905:function(e,r,t){t.d(r,{Zo:function(){return s},kt:function(){return h}});var n=t(7294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=n.createContext({}),u=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},s=function(e){var r=u(e.components);return n.createElement(c.Provider,{value:r},e.children)},l={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=u(t),h=i,g=d["".concat(c,".").concat(h)]||d[h]||l[h]||o;return t?n.createElement(g,a(a({ref:r},s),{},{components:t})):n.createElement(g,a({ref:r},s))}));function h(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var p={};for(var c in r)hasOwnProperty.call(r,c)&&(p[c]=r[c]);p.originalType=e,p.mdxType="string"==typeof e?e:i,a[1]=p;for(var u=2;u<o;u++)a[u]=t[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8826:function(e,r,t){t.r(r),t.d(r,{assets:function(){return s},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return p},metadata:function(){return u},toc:function(){return l}});var n=t(7462),i=t(3366),o=(t(7294),t(3905)),a=["components"],p={sidebar_position:3},c="GraphQL API",u={unversionedId:"mhira-reporting-guide/graphql_api",id:"mhira-reporting-guide/graphql_api",title:"GraphQL API",description:"The reporting app will need to request data via MHIRA's API.",source:"@site/docs/5-mhira-reporting-guide/3-graphql_api.md",sourceDirName:"5-mhira-reporting-guide",slug:"/mhira-reporting-guide/graphql_api",permalink:"/documentation/docs/mhira-reporting-guide/graphql_api",draft:!1,editUrl:"https://github.com/mhira-project/documentation/edit/main/docs/5-mhira-reporting-guide/3-graphql_api.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/documentation/docs/mhira-reporting-guide/overview"},next:{title:"Using shiny apps for reporting",permalink:"/documentation/docs/mhira-reporting-guide/using-shiny-apps-for-reporting"}},s={},l=[],d={toc:l};function h(e){var r=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"graphql-api"},"GraphQL API"),(0,o.kt)("p",null,"The reporting app will need to request data via MHIRA's API.\nThis API uses the ",(0,o.kt)("a",{parentName:"p",href:"https://graphql.org/"},"GraphQL query language"),".\nWe recommend to look into the materials and examples on the this websit for a deeper understaning of the query language.\nSofware packages to handle the GraphQL server side and client side are available.\nThe reporting tool in MHIRA is a client while the server side is part of MHIRA. "),(0,o.kt)("p",null,"For our R implementation, we used ",(0,o.kt)("a",{parentName:"p",href:"https://gist.github.com/rentrop/83cb1d8fc8593726a808032e55314019"},"this")," R function. "),(0,o.kt)("p",null,"The authentitation token needed to access MHIRA via this API needs to be retrieved from the 'browser session' of the user requesting a report. "),(0,o.kt)("h1",{id:"accessing-the-api-from-other-contaiers"},"Accessing the API from other contaiers"),(0,o.kt)("p",null,"Via the docker container network, the graphQL API can be accessed with the URL 'mhira-backend:3000/graphql'"),(0,o.kt)("h1",{id:"playground"},"Playground"),(0,o.kt)("p",null,"In the .env file the graphQL playground can be activated by setting"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"```\nGRAPHQL_PLAYGROUND_ENABLED=true\n\n```\n")))}h.isMDXComponent=!0}}]);